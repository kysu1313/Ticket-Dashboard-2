
@page "/winston"

@inject IJSRuntime jsRuntime
@namespace HUD.Components
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor
@inject HUD.Data.ApplicationDbContext context
@using HUD.Data.Models.Actions
@using HUD.Data.Models.RepairShopr;
@inherits WinstonBase
@using System.Security.Claims;
@using System.Threading;
@using System.Threading.Tasks;
@*@GetClaims();*@

<TopControls _apiConn="@_apiConnW" _context="@context" _userContext="@httpContextAccessor" _userGuid="@_userGuid" Greensboro="@_greensboro" Winston="@_winston" _refreshRate="@REFRESH_RATE" />



<div id="grid">


    <div class="row">
        @*<ContactList />*@
    </div>

    <div class="row task-list-card-row">

        <MainInfoComponent _apiConn="@_apiConnW" _userContext="@httpContextAccessor" _refreshRate="@REFRESH_RATE" />

    </div>


    <div class="row task-list-card-row">

        <TicketListComponent _apiConn="@_apiConnW" _userContext="@httpContextAccessor" _refreshRate="@REFRESH_RATE" />

    </div>

    <div class="row task-list-card-row">




        <div class="col-md-6">
            @*<PieChart />*@
        </div>


    </div>

</div>

@code {

    [Parameter]
    public bool _greensboro { get; set; } = false;
    [Parameter]
    public bool _winston { get; set; } = true;


    protected override async Task<Task> OnInitializedAsync()
    {
        _prefix = httpContextAccessor.HttpContext.User.Claims.First(a => a.Type == "UrlPrefix").Value;
        _apiKey = httpContextAccessor.HttpContext.User.Claims.First(a => a.Type == "ApiKey").Value;
        _userGuid = httpContextAccessor.HttpContext.User.FindFirstValue(ClaimTypes.NameIdentifier);
        _apiConnW = new ApiConnection(context, httpContextAccessor, _userGuid, Configuration, _prefix, _apiKey, false, true);
        return base.OnInitializedAsync();
    }


}
